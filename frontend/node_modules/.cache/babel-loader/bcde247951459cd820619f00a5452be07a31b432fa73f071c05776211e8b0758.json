{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '../apiService'; // adjust the path as per your file structure\n\nexport default {\n  data() {\n    return {\n      editedRecipe: {\n        id: null,\n        title: '',\n        ingredients: '',\n        instructions: ''\n      }\n    };\n  },\n  mounted() {\n    // Fetch the recipe details using the ID from route params\n    this.fetchRecipe();\n  },\n  methods: {\n    fetchRecipe() {\n      const recipeId = this.$route.params.id;\n      api.get(`recipes/${recipeId}/`).then(response => {\n        this.editedRecipe = response.data;\n      }).catch(error => {\n        console.error('Error fetching recipe:', error);\n      });\n    },\n    submitForm() {\n      const recipeId = this.editedRecipe.id;\n      api.put(`recipes/${recipeId}/`, this.editedRecipe).then(response => {\n        console.log('Recipe updated successfully:', response);\n        // Optionally, redirect to the updated recipe or recipe list page\n        this.$router.push({\n          name: 'RecipeList'\n        });\n      }).catch(error => {\n        console.error('Error updating recipe:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["api","data","editedRecipe","id","title","ingredients","instructions","mounted","fetchRecipe","methods","recipeId","$route","params","get","then","response","catch","error","console","submitForm","put","log","$router","push","name"],"sources":["C:\\Users\\mantegbosh.assefa\\Desktop\\django\\frontend\\src\\components\\EditRecipe.vue"],"sourcesContent":["<!-- EditRecipe.vue -->\r\n\r\n<template>\r\n    <div class=\"edit-recipe\">\r\n      <h2>Edit Recipe</h2>\r\n      <form @submit.prevent=\"submitForm\">\r\n        <label for=\"title\">Title:</label>\r\n        <input type=\"text\" id=\"title\" v-model=\"editedRecipe.title\" required>\r\n        \r\n        <label for=\"ingredients\">Ingredients:</label>\r\n        <textarea id=\"ingredients\" v-model=\"editedRecipe.ingredients\" required></textarea>\r\n        \r\n        <label for=\"instructions\">Instructions:</label>\r\n        <textarea id=\"instructions\" v-model=\"editedRecipe.instructions\" required></textarea>\r\n        \r\n        <button type=\"submit\">Save Changes</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import api from '../apiService'; // adjust the path as per your file structure\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        editedRecipe: {\r\n          id: null,\r\n          title: '',\r\n          ingredients: '',\r\n          instructions: ''\r\n        }\r\n      };\r\n    },\r\n    mounted() {\r\n      // Fetch the recipe details using the ID from route params\r\n      this.fetchRecipe();\r\n    },\r\n    methods: {\r\n      fetchRecipe() {\r\n        const recipeId = this.$route.params.id;\r\n        api.get(`recipes/${recipeId}/`)\r\n          .then(response => {\r\n            this.editedRecipe = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching recipe:', error);\r\n          });\r\n      },\r\n      submitForm() {\r\n        const recipeId = this.editedRecipe.id;\r\n        api.put(`recipes/${recipeId}/`, this.editedRecipe)\r\n          .then(response => {\r\n            console.log('Recipe updated successfully:', response);\r\n            // Optionally, redirect to the updated recipe or recipe list page\r\n            this.$router.push({ name: 'RecipeList' });\r\n          })\r\n          .catch(error => {\r\n            console.error('Error updating recipe:', error);\r\n          });\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .edit-recipe {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  label {\r\n    margin-top: 1em;\r\n  }\r\n  \r\n  input, textarea {\r\n    padding: 0.5em;\r\n    margin-top: 0.5em;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    font-size: 1em;\r\n  }\r\n  \r\n  button {\r\n    margin-top: 1em;\r\n    padding: 0.5em 1em;\r\n    border: none;\r\n    border-radius: 4px;\r\n    background-color: #007BFF;\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  button:active {\r\n    background-color: #00408d;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAqBE,OAAOA,GAAE,MAAO,eAAe,EAAE;;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,EAAE,EAAE,IAAI;QACRC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE;MAChB;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZ,MAAME,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACT,EAAE;MACtCH,GAAG,CAACa,GAAG,CAAC,WAAWH,QAAQ,GAAG,EAC3BI,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACb,YAAW,GAAIa,QAAQ,CAACd,IAAI;MACnC,CAAC,EACAe,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,MAAMT,QAAO,GAAI,IAAI,CAACR,YAAY,CAACC,EAAE;MACrCH,GAAG,CAACoB,GAAG,CAAC,WAAWV,QAAQ,GAAG,EAAE,IAAI,CAACR,YAAY,EAC9CY,IAAI,CAACC,QAAO,IAAK;QAChBG,OAAO,CAACG,GAAG,CAAC,8BAA8B,EAAEN,QAAQ,CAAC;QACrD;QACA,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAa,CAAC,CAAC;MAC3C,CAAC,EACAR,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}